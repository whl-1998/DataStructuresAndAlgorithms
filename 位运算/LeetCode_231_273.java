//231. 2的幂

//解法1：&运算		执行用时：2ms
//思路：首先明确n如果是二的幂次, 那么它的二进制数一定只存在一个1
//		移除二进制数n的最低位1, 如果移除后n == 0, 说明二进制数n只存在一个1
//时间复杂度：O(1)
//空间复杂度：O(1)
//总结：移除二进制数的最低位1：n & (n - 1)
public boolean isPowerOfTwo(int n) {
	return ((n > 0) && (n & (n - 1)) == 0);    
}