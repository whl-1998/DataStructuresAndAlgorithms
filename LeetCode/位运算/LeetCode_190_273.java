//190. 颠倒二进制位

//解法1：位移解法	执行用时1ms
//思路：首先想一下如果要我们手算这道题的思路, 就是从n的最低位开始逐个取出, 然后从res最高位逐个放入, 将思路转换位代码即可
//		这里需要注意的是, 我们是先将res左移了一位再进行添加操作
//		这是因为res只需要左移30次, 最后一次会导致结果多出一位
public int reverseBits(int n) {
	int res = 0;
	for (int i = 0; i < 32; i++) {
		res <<= 1;
		res += (n & 1);
		n >>= 1;
	}
	return res;
}